# Generated 2022-10-28 from:
# /home/will/Insync/will9444555@hotmail.com/OneDrive/Projects/DTCN/separation/hparams/deformable/convtasnet-whamr.yaml
# yamllint disable
# ################################
# Model: convtasnet for source separation
# https://arxiv.org/abs/2010.13154
#
# Dataset : WHAMR!
# ################################
# Basic parameters
# Seed needs to be set at top of yaml, before objects with parameters are made
#l
seed: 1234
__set_seed: !apply:torch.manual_seed [1234]

# Data params

# the data folder for the wham dataset
# data_folder needs to follow the format:  /yourpath/whamr.
# make sure to use the name whamr at your top folder for the dataset!
data_folder: /fastdata/acp19jwr/data/whamr
alternate_path: /fastdata/acp19jwr/data/whamr
mix_folder: mix_both_reverb
mini: false # if true only uses a quarter of the wham/whamr data


# the path for wsj0/si_tr_s/ folder -- only needed if dynamic mixing is used
# e.g. /yourpath/wsj0-processed/si_tr_s/
# you need to convert the original wsj0 to 8k
# you can do this conversion with the script ../meta/preprocess_dynamic_mixing.py
base_folder_dm: /yourpath/wsj0-processed/si_tr_s/

experiment_name: convtasnet-whamr
experiment_folder: deformable/baselines/R=3/X=8
output_folder: results/deformable/baselines/R=3/X=8/convtasnet-whamr/1234
train_log: results/deformable/baselines/R=3/X=8/convtasnet-whamr/1234/train_log.txt
save_folder: results/deformable/baselines/R=3/X=8/convtasnet-whamr/1234/save

# the file names should start with whamr instead of whamorg
train_data: results/deformable/baselines/R=3/X=8/convtasnet-whamr/1234/save/whamr_tr.csv
valid_data: results/deformable/baselines/R=3/X=8/convtasnet-whamr/1234/save/whamr_cv.csv
test_data: results/deformable/baselines/R=3/X=8/convtasnet-whamr/1234/save/whamr_tt.csv
skip_prep: false

# Experiment params
auto_mix_prec: false # Set it to True for mixed precision
test_only: false
num_spks: 2 # set to 3 for wsj0-3mix
progressbar: true
save_audio: true # Save estimated sources on disk
sample_rate: 8000

# Training parameters
N_epochs: 100
batch_size: 2
lr: 0.001
clip_grad_norm: 5
loss_upper_lim: 9999  # this is the upper limit for an acceptable loss
# if True, the training sequences are cut to a specified length
limit_training_signal_len: true
# this is the length of sequences if we choose to limit
# the signal length of training sequences
training_signal_len: 32000

# Set it to True to dynamically create mixtures at training time
dynamic_mixing: false

# Parameters for data augmentation

# rir_path variable points to the directory of the room impulse responses
# e.g. /miniscratch/subakany/rir_wavs
# If the path does not exist, it is created automatically.
# rir_path: /share/mini1/usr/will/scratch/whamr/rir_wavs

use_wavedrop: false
use_speedperturb: false
use_speedperturb_sameforeachsource: false
use_rand_shift: false
min_shift: -8000
max_shift: 8000

speedperturb: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
  perturb_prob: 1.0
  drop_freq_prob: 0.0
  drop_chunk_prob: 0.0
  sample_rate: 8000
  speeds: [95, 100, 105]

wavedrop: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
  perturb_prob: 0.0
  drop_freq_prob: 1.0
  drop_chunk_prob: 1.0
  sample_rate: 8000

# loss thresholding -- this thresholds the training loss
threshold_byloss: true
threshold: -30

# Encoder parameters
N_encoder_out: 512
out_channels: 512
kernel_size: 16
kernel_stride: 8

# Dataloader options
dataloader_opts:
  batch_size: 2
  num_workers: 4

# Specifying the network
Encoder: &id001 !new:speechbrain.lobes.models.dual_path.Encoder
  kernel_size: 16
  out_channels: 512

X: 8
R: 3

MaskNet: &id003 !new:src.deformable.MaskNet

  N: 512
  B: 128
  H: 512
  P: 3
  X: 8
  R: 3
  C: 2
  norm_type: gLN
  causal: false
  mask_nonlinear: relu

Decoder: &id002 !new:speechbrain.lobes.models.dual_path.Decoder
  in_channels: 512
  out_channels: 1
  kernel_size: 16
  stride: 8
  bias: false

optimizer: !name:torch.optim.Adam
  lr: 0.001
  weight_decay: 0

loss: !name:speechbrain.nnet.losses.get_si_snr_with_pitwrapper

lr_scheduler: &id005 !new:speechbrain.nnet.schedulers.ReduceLROnPlateau

  factor: 0.5
  patience: 3
  dont_halve_until_epoch: 3

epoch_counter: &id004 !new:speechbrain.utils.epoch_loop.EpochCounter
  limit: 100

modules:
  encoder: *id001
  decoder: *id002
  masknet: *id003
checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: results/deformable/baselines/R=3/X=8/convtasnet-whamr/1234/save
  recoverables:
    encoder: *id001
    decoder: *id002
    masknet: *id003
    counter: *id004
    lr_scheduler: *id005
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: results/deformable/baselines/R=3/X=8/convtasnet-whamr/1234/train_log.txt
